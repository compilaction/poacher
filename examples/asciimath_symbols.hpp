// http://asciimath.org/

// Operation symbols

//s "+",          "op_add"
//s "-",          "op_sub"
//s "*",          "op_cdot"
//s "**",         "op_ast"
//s "***",        "op_star"
//s "//",         "op_slash"
//s "\\",         "op_backslash"
//s "xx",         "op_times"
//s "-:",         "op_div"
//s "|><",        "op_ltimes"
//s "><|",        "op_rtimes"
//s "|><|",       "op_bowtie"
//s "@",          "op_circ"
//s "o+",         "op_oplus"
//s "ox",         "op_otimes"
//s "o.",         "op_odot"
//s "sum",        "op_sum"
//s "prod",       "op_prod"
//s "^^",         "op_wedge"
//s "^^^",        "op_bidwedge"
//s "vv",         "op_vee"
//s "vvv",        "op_bigvee"
//s "nn",         "op_cap"
//s "nnn",        "op_bigcap"
//s "uu",         "op_cup"
//s "uuu",        "op_bigcup"

// Miscellanous symbols

//s "/",          "misc_frac"
//s "^",          "misc_exp"
//s "sqrt",       "misc_sqrt"
//s "root",       "misc_root"
//s "int",        "misc_int"
//s "oint",       "misc_oint"
//s "del",        "misc_partial"
//s "grad",       "misc_nabla"
//s "+-",         "misc_pm"
//s "O/",         "misc_emptyset"
//s "oo",         "misc_infty"
//s "aleph",      "misc_aleph"
//s ":.",         "misc_therefore"
//s ":'",         "misc_because"
//s "|...|",      "misc_ldots"
//s "|cdots|",    "misc_cdots"
//s "vdots",      "misc_vdots"
//s "ddots",      "misc_ddots"
//s "|\ |",       "misc_???"
//s "|quad|",     "misc_???"
//s "/_",         "misc_angle"
//s "frown",      "misc_frown"
//s "/_\",        "misc_triangle"
//s "diamond",    "misc_diamond"
//s "square",     "misc_square"
//s "|__",        "misc_lfloor"
//s "__|",        "misc_rfloor"
//s "|~",         "misc_lceiling"
//s "~|",         "misc_rceiling"
//s "CC",         "misc_C"
//s "NN",         "misc_N"
//s "QQ",         "misc_Q"
//s "RR",         "misc_R"
//s "ZZ",         "misc_Z"

// Relation symbols

//s "=",          "rel_eq"
//s "!=",         "rel_ne"
//s "<",          "rel_lt"
//s ">",          "rel_gt"
//s "<=",         "rel_le"
//s ">=",         "rel_ge"
//s "-<",         "rel_prec"
//s "-<=",        "rel_preceq"
//s ">-",         "rel_succ"
//s ">-=",        "rel_succeq"
//s "in",         "rel_in"
//s "!in",        "rel_notin"
//s "sub",        "rel_subset"
//s "sup",        "rel_supset"
//s "sube",       "rel_subseteq"
//s "supe",       "rel_supseteq"
//s "-=",         "rel_equiv"
//s "~=",         "rel_cong"
//s "~~",         "rel_approx"
//s "prop",       "rel_propto"

// Logical symbols

//s "and",        "logic_and"
//s "or",         "logic_or"
//s "not",        "logic_neg"
//s "=>",         "logic_implies"
//s "if",         "logic_if"
//s "<=>",        "logic_iff"
//s "AA",         "logic_forall"
//s "EE",         "logic_exists"
//s "_|_",        "logic_bot"
//s "TT",         "logic_top"
//s "|--",        "logic_vdash"
//s "|==",        "logic_models"

// Grouping brackets

//s "(";          "grp_lpar"
//s ")";          "grp_rpar"
//s "[";          "grp_lsqbra"
//s "]";          "grp_rsqbra"
//s "{";          "grp_lcubra"
//s "}";          "grp_rcubra"
//s "(:";         "grp_langle"
//s ":)";         "grp_rangle"
//s "<<";         "grp_langle"
//s ">>";         "grp_rangle"
//s "{: x )";     "grp_lxpar"
//s "( x :}";     "grp_rxpar"
//s "abs";        "grp_abs"
//s "floor";      "grp_floor"
//s "ceil";       "grp_ceil"
//s "norm";       "grp_norm"


// Arrows

//s "uarr",       "arr_uparrow"
//s "darr",       "arr_downarrow"
//s "rarr",       "arr_rightarrow"
//s "->",         "arr_to"
//s ">->",        "arr_rightarrowtail"
//s "->>",        "arr_twoheadrightarrow"
//s ">->>",       "arr_twoheadrightarrowtail"
//s "|->",        "arr_mapsto"
//s "larr",       "arr_leftarrow"
//s "harr",       "arr_leftrightarrow"
//s "rArr",       "arr_Rightarrow"
//s "lArr",       "arr_Leftarrow"
//s "hArr",       "arr_Leftrightarrow"

// Accents

//s "hat",        "acc_hat"
//s "bar",        "acc_bar"
//s "ul",         "acc_ul"
//s "vec",        "acc_vec"
//s "dot",        "acc_dot"
//s "ddot",       "acc_ddot"
//s "overset",    "acc_overset"
//s "underset",   "acc_underset"
//s "ubrace",     "acc_ubrace"
//s "obrace",     "acc_obrace"
//s "color",      "acc_color"
//s "cancel",     "acc_cancel"

// Greek Letters

//s "alpha",      "gr_alpha"
//s "beta",       "gr_beta"
//s "gamma",      "gr_gamma"
//s "Gamma",      "gr_Gamma"
//s "delta",      "gr_delta"
//s "Delta",      "gr_Delta"
//s "epsilon",    "gr_epsilon"
//s "varepsilon", "gr_varepsilon"
//s "zeta",       "gr_zeta"
//s "eta",        "gr_eta"
//s "theta",      "gr_theta"
//s "Theta",      "gr_Theta"
//s "vartheta",   "gr_vartheta"
//s "iota",       "gr_iota"
//s "kappa",      "gr_kappa"
//s "lambda",     "gr_lambda"
//s "Lambda",     "gr_Lambda"
//s "mu",         "gr_mu"
//s "nu",         "gr_nu"
//s "xi",         "gr_xi"
//s "Xi",         "gr_Xi"
//s "pi",         "gr_pi"
//s "Pi",         "gr_Pi"
//s "rho",        "gr_rho"
//s "sigma",      "gr_sigma"
//s "Sigma",      "gr_Sigma"
//s "tau",        "gr_tau"
//s "upsilon",    "gr_upsilon"
//s "phi",        "gr_phi"
//s "Phi",        "gr_Phi"
//s "varphi",     "gr_varphi"
//s "chi",        "gr_chi"
//s "psi",        "gr_psi"
//s "Psi",        "gr_Psi"
//s "omega",      "gr_omega"
//s "Omega",      "gr_Omega"

// Font commands

//s "bb",         "ft_bb"
//s "bbb",        "ft_bbb"
//s "cc",         "ft_cc"
//s "tt",         "ft_tt"
//s "fr",         "ft_fr"
//s "sf",         "ft_sf"

// Standard Functions

//s "sin",        "fun_sin"
//s "cos",        "fun_cos"
//s "tan",        "fun_tan"
//s "sec",        "fun_sec"
//s "csc",        "fun_csc"
//s "cot",        "fun_cot"
//s "arcsin",     "fun_arcsin"
//s "arccos",     "fun_arccos"
//s "arctan",     "fun_arctan"
//s "sinh",       "fun_sinh"
//s "cosh",       "fun_cosh"
//s "tanh",       "fun_tanh"
//s "sech",       "fun_sech"
//s "csch",       "fun_csch"
//s "coth",       "fun_coth"
//s "exp",        "fun_exp"
//s "log",        "fun_log"
//s "ln",         "fun_ln"
//s "det",        "fun_det"
//s "dim",        "fun_dim"
//s "mod",        "fun_mod"
//s "gcd",        "fun_gcd"
//s "lcm",        "fun_lcm"
//s "lub",        "fun_lub"
//s "glb",        "fun_glb"
//s "min",        "fun_min"
//s "max",        "fun_max"
//s "f",          "fun_f"
//s "g",          "fun_g"
